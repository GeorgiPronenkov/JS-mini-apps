>npm init -y
package.json >  "main": "server.js"
                "start": "node server.js",
                "devStart": "nodemon server.js"
//install dependencies for express server
>npm i express ejs express-ejs-layouts
//install development dependencies
>npm i --save-dev nodemon

views/layouts > layout.ejs ... html
views > index.ejs

//MongoDb
install mongoose in app:
>npm i mongoose
//library dotenv(allows to load environment variables into application)
>npm i --save-dev dotenv
create .env > DATABSE_URL
sever.js > check if running in production mode

Git
=======================================
create .gitignore (.env , node_modules)
git init
git add .
git commit -m "some text here"
in GitHub: create repository => ...or push existing code...(copy the 2 rows in terminal)
==========================

MongoDB
create project > Create New Cluster
Clusters 
> CONNECT 
> (dbUser) user, (dbUserPassword)-autogenerate and copy 
> Create MongoDb user
Choose connection method: Connect your application > copy String
================================================================
Heroku
//deploy the code to server
install Heroku CLI
Heroku > Create New App >...
in terminal > heroku login 
            > heroku git:remote -a 'myappName' 
            > git push heroku master
heroku 
> settings
>Config Vars
>(key): DATABASE_URL, (value): paste String from MongoDB(place dbUserPassword) in string           

==================
routes > author.js
views > create dir authors > index.ejs and new.ejs

server.js > create const authorRouter > app.use('/authors', authorRouter)

Create header for application:
views > create partials dir(for all template files related to roots) > header.ejs

layouts/layout.ejs > <%- include('../partials/header.ejs') %>

create model:
models dir > create author.js > settings for schema
routes/authors.js > import Author ... , { author: new Author() }

views/authors/new.ejs > 
        > create _form_fiels.ejs > //_ indicate that the file is a partial file
//install library bodyParser
npm i body-parser
partials/ > errorMessage.ejs

//update repository
git add .
git commit -m "some text"
git push -u origin master

//errorMessage:
errorMessage.ejs > 
<% if (locals.errorMessage != null) { %> 
    <%= errorMessage %> 
<% } %> 

routes/author.js > async await ...

views/authors/index.ejs > form...
